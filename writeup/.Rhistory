mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))
ready_data <-correct_counts%>%
group_by(subject_id) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))
View(ready_data)
View(combined_data)
View(correct_counts)
View(ready_data)
View(organized.data)
View(combined_data)
View(correct_counts)
View(combined_data)
View(correct_counts)
ready_data<- correct_counts %>%
group_by(subject_id) %>%
mutate(sex = as.numeric(as.character(gender[which(gender == "Female")])))
View(correct_counts)
### Data Preparation
#### Load Relevant Libraries and Functions
library(readr)
library(dplyr)
library(ggplot2)
library(ez)
library(osfr)
library(tidyr)
library(jsonlite)
library(stringr)
#### Import data
files <- list.files(path="~/Desktop/tarampi2016_rescue/pilot data/", full.names = TRUE)
# read in and combine all the CSV files using bind_rows()
combined_data <- lapply(files, function(filepath) {
df <- read.csv(filepath)
return(df)
})%>%
bind_rows()
#### Data exclusion / filtering
# exclude unwanted columns and rows
organized.data <- combined_data %>%
select("subject_id", "stimulus","response", "condition", "correct") %>%
filter (response != 0 ) %>%
filter (subject_id != "na")
#### Prepare data for analysis - create columns etc.
correct_counts <- organized.data %>%
mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))
ready_data <-correct_counts%>%
group_by(subject_id) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))
View(ready_data)
ready_data <-correct_counts%>%
group_by(subject_id) %>%
mutate(correct_count = sum(correct, na.rm=TRUE))
View(ready_data)
View(ready_data)
View(ready_data)
ready_data <-correct_counts%>%
filter(is.na(gender) == FALSE)
View(ready_data)
View(organized.data)
View(correct_counts)
View(combined_data)
View(correct_counts)
View(ready_data)
ready_data <-correct_counts%>%
group_by(subject_id) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))%>%
filter(is.na(gender) == FALSE)
ready_data <-correct_counts%>%
summarise(correct_count = sum(correct, na.rm=TRUE))%>%
filter(is.na(gender) == FALSE)
ready_data <-correct_counts%>%
group_by(subject_id) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))%>%
```
ready_data <-correct_counts%>%
group_by(subject_id) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))
View(ready_data)
ready_data <-correct_counts%>%
group_by(subject_id,gender ) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))
View(ready_data)
View(organized.data)
View(ready_data)
View(organized.data)
View(correct_counts)
ready_data <-correct_counts%>%
group_by(subject_id) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))
#### Prepare data for analysis - create columns etc.
correct_counts <- organized.data %>%
mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))%>%
group_by(subject_id) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))
View(correct_counts)
View(organized.data)
View(organized.data)
View(ready_data)
filter(is.na(gender) == FALSE)
ready_data <-correct_counts%>%
group_by(subject_id,gender ) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))
### Data Preparation
#### Load Relevant Libraries and Functions
library(readr)
library(dplyr)
library(ggplot2)
library(ez)
library(osfr)
library(tidyr)
library(jsonlite)
library(stringr)
#### Import data
files <- list.files(path="~/Desktop/tarampi2016_rescue/pilot data/", full.names = TRUE)
# read in and combine all the CSV files using bind_rows()
combined_data <- lapply(files, function(filepath) {
df <- read.csv(filepath)
return(df)
})%>%
bind_rows()
#### Data exclusion / filtering
# exclude unwanted columns and rows
organized.data <- combined_data %>%
select("subject_id", "stimulus","response", "condition", "correct") %>%
filter (response != 0 ) %>%
filter (subject_id != "na")
#### Prepare data for analysis - create columns etc.
correct_counts <- organized.data %>%
mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
summarise(correct_count = sum(correct, na.rm=TRUE))
View(ready_data)
View(organized.data)
View(correct_counts)
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
mutate(correct_count = sum(correct, na.rm=TRUE))
View(ready_data)
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
mutate(correct_count = sum(correct, na.rm=TRUE))%>%
filter(is.na(gender)==FALSE)
View(ready_data)
View(ready_data)
View(ready_data)
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean = mean(correct_count), ci = 1.96*(sd(score)/sqrt(n())))
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean = mean(correct_count), ci = 1.96*(sd(correct_count)/sqrt(n())))
View(graph_data)
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean = mean(correct_count), mean_sem = sd(correct_count) / sqrt(n())))
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean = mean(correct_count), mean_sem = sd(correct_count) / sqrt(n()))
View(graph_data)
View(ready_data)
View(ready_data)
### Confirmatory analysis
anova<- aov(correct_count ~ gender * condition, data = ready_data)
View(anova)
### Confirmatory analysis
anova<- aov(correct_count ~ gender * condition, data = ready_data)
summary(anova)
View(graph_data)
### Data Preparation
#### Load Relevant Libraries and Functions
library(readr)
library(dplyr)
library(ggplot2)
library(ez)
library(osfr)
library(tidyr)
library(jsonlite)
library(stringr)
#### Import data
files <- list.files(path="~/Desktop/tarampi2016_rescue/pilot data/", full.names = TRUE)
# read in and combine all the CSV files using bind_rows()
combined_data <- lapply(files, function(filepath) {
df <- read.csv(filepath)
return(df)
})%>%
bind_rows()
#### Data exclusion / filtering
# exclude unwanted columns and rows
organized.data <- combined_data %>%
select("subject_id", "stimulus","response", "condition", "correct") %>%
filter (response != 0 ) %>%
filter (subject_id != "na")
#### Prepare data for analysis - create columns etc.
correct_counts <- organized.data %>%
mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
mutate(correct_count = sum(correct, na.rm=TRUE))%>%
filter(is.na(gender)==FALSE)
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean_correct = mean(correct_count), mean_sem = sd(correct_count) / sqrt(n()))
ggplot(data = graph_data, aes(x = gender, y = mean_correct, fill = condition)) +
geom_col(width = 0.5)+
geom_errorbar(data = graph_data, aes(ymin = mean_correct - mean_sem, ymax = mean_correct+ mean_sem), width = 0.5)+
geom_text(aes(label=count.mean$GRANDM),vjust=-1.2)
ggplot(data = graph_data, aes(x = gender, y = mean_correct, fill = condition)) +
geom_col(width = 0.5)+
geom_errorbar(data = graph_data, aes(ymin = mean_correct - mean_sem, ymax = mean_correct+ mean_sem), width = 0.5)+
geom_text(aes(label=graph_data$mean_correct),vjust=-1.2)
### Data Preparation
#### Load Relevant Libraries and Functions
library(readr)
library(dplyr)
library(ggplot2)
library(ez)
library(osfr)
library(tidyr)
library(jsonlite)
library(stringr)
#### Import data
files <- list.files(path="~/Desktop/tarampi2016_rescue/pilot data/", full.names = TRUE)
# read in and combine all the CSV files using bind_rows()
combined_data <- lapply(files, function(filepath) {
df <- read.csv(filepath)
return(df)
})%>%
bind_rows()
#### Data exclusion / filtering
# exclude unwanted columns and rows
organized.data <- combined_data %>%
select("subject_id", "stimulus","response", "condition", "correct") %>%
filter (response != 0 ) %>%
filter (subject_id != "na")
#### Prepare data for analysis - create columns etc.
correct_counts <- organized.data %>%
mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
mutate(correct_count = sum(correct, na.rm=TRUE))%>%
filter(is.na(gender)==FALSE)
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean_correct = mean(correct_count), mean_sem = sd(correct_count) / sqrt(n()))
ggplot(data = graph_data, aes(x = gender, y = mean_correct, fill = condition)) +
geom_col(width = 0.5)+
geom_errorbar(data = graph_data, aes(ymin = mean_correct - mean_sem, ymax = mean_correct+ mean_sem), width = 0.5)+
geom_text(aes(label=graph_data$mean_correct),vjust=-1.2)
### Data Preparation
#### Load Relevant Libraries and Functions
library(readr)
library(dplyr)
library(ggplot2)
library(ez)
library(osfr)
library(tidyr)
library(jsonlite)
library(stringr)
#### Import data
files <- list.files(path="~/Desktop/tarampi2016_rescue/pilot data/", full.names = TRUE)
# read in and combine all the CSV files using bind_rows()
combined_data <- lapply(files, function(filepath) {
df <- read.csv(filepath)
return(df)
})%>%
bind_rows()
#### Data exclusion / filtering
# exclude unwanted columns and rows
organized.data <- combined_data %>%
select("subject_id", "stimulus","response", "condition", "correct") %>%
filter (response != 0 ) %>%
filter (subject_id != "na")
#### Prepare data for analysis - create columns etc.
correct_counts <- organized.data %>%
mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
mutate(correct_count = sum(correct, na.rm=TRUE))%>%
filter(is.na(gender)==FALSE)
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean_correct = mean(correct_count), mean_sem = sd(correct_count) / sqrt(n()))
ggplot(data = graph_data, aes(x = gender, y = mean_correct, fill = condition)) +
geom_col(width = 0.5)+
geom_errorbar(data = graph_data, aes(ymin = mean_correct - mean_sem, ymax = mean_correct+ mean_sem), width = 0.5)+
geom_text(aes(label=graph_data$mean_correct),vjust=-1.2)
### Data Preparation
#### Load Relevant Libraries and Functions
library(readr)
library(dplyr)
library(ggplot2)
library(ez)
library(osfr)
library(tidyr)
library(jsonlite)
library(stringr)
#### Import data
files <- list.files(path="~/Desktop/tarampi2016_rescue/pilot data/", full.names = TRUE)
# read in and combine all the CSV files using bind_rows()
combined_data <- lapply(files, function(filepath) {
df <- read.csv(filepath)
return(df)
})%>%
bind_rows()
#### Data exclusion / filtering
# exclude unwanted columns and rows
organized.data <- combined_data %>%
select("subject_id", "stimulus","response", "condition", "correct") %>%
filter (response != 0 ) %>%
filter (subject_id != "na")
#### Prepare data for analysis - create columns etc.
correct_counts <- organized.data %>%
mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
mutate(correct_count = sum(correct, na.rm=TRUE))%>%
filter(is.na(gender)==FALSE)
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean_correct = mean(correct_count), mean_sem = sd(correct_count) / sqrt(n()))
plot(ggplot(graph_data, aes(x=gender, y=mean_correct, fill=condition)) +
geom_bar(position="dodge", stat="identity") +
theme_bw() +
ylim(0, 30) +
ylab("Mean Number Correct") +
ggtitle("Mean Correct by Sex and Condition") +
theme(axis.title.x = element_blank()) +
scale_x_discrete(limits=c('M','F'), labels=c('Males','Females')) +
scale_fill_manual(values=c("#8C8E90","#E2E3E4"),name='',limits=c('spatial','social'),labels=c('Spatial Condition','Social Condition')) +
geom_errorbar(aes(ymin = mean_correct - mean_sem, ymax = mean_correct+ mean_sem),width=0.2,position=position_dodge(.9)))
View(graph_data)
View(graph_data)
### Data Preparation
#### Load Relevant Libraries and Functions
library(readr)
library(dplyr)
library(ggplot2)
library(ez)
library(osfr)
library(tidyr)
library(jsonlite)
library(stringr)
#### Import data
files <- list.files(path="~/Desktop/tarampi2016_rescue/pilot data/", full.names = TRUE)
# read in and combine all the CSV files using bind_rows()
combined_data <- lapply(files, function(filepath) {
df <- read.csv(filepath)
return(df)
})%>%
bind_rows()
#### Data exclusion / filtering
# exclude unwanted columns and rows
organized.data <- combined_data %>%
select("subject_id", "stimulus","response", "condition", "correct") %>%
filter (response != 0 ) %>%
filter (subject_id != "na")
#### Prepare data for analysis - create columns etc.
correct_counts <- organized.data %>%
mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
mutate(correct_count = sum(correct, na.rm=TRUE))%>%
filter(is.na(gender)==FALSE)
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean_correct = mean(correct_count), mean_sem = sd(correct_count) / sqrt(n()))
plot(ggplot(graph_data, aes(x=gender, y=mean_correct, fill=condition)) +
geom_bar(position="dodge", stat="identity") +
theme_bw() +
ylim(0, 30) +
ylab("Mean Number Correct") +
ggtitle("Mean Correct by Sex and Condition") +
scale_fill_manual(values=c("#8C8E90","#E2E3E4"),name='',limits=c('spatial','social'),labels=c('Spatial Condition','Social Condition')) +
geom_errorbar(aes(ymin = mean_correct - mean_sem, ymax = mean_correct+ mean_sem),width=0.2,position=position_dodge(.9)))
### Data Preparation
#### Load Relevant Libraries and Functions
library(readr)
library(dplyr)
library(ggplot2)
library(ez)
library(osfr)
library(tidyr)
library(jsonlite)
library(stringr)
#### Import data
files <- list.files(path="~/Desktop/tarampi2016_rescue/pilot data/", full.names = TRUE)
# read in and combine all the CSV files using bind_rows()
combined_data <- lapply(files, function(filepath) {
df <- read.csv(filepath)
return(df)
})%>%
bind_rows()
#### Data exclusion / filtering
# exclude unwanted columns and rows
organized.data <- combined_data %>%
select("subject_id", "stimulus","response", "condition", "correct") %>%
filter (response != 0 ) %>%
filter (subject_id != "na")
#### Prepare data for analysis - create columns etc.
correct_counts <- organized.data %>%
mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
mutate(correct_count = sum(correct, na.rm=TRUE))%>%
filter(is.na(gender)==FALSE)
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean_correct = mean(correct_count), mean_sem = sd(correct_count) / sqrt(n()))
ggplot(data = graph_data, aes(x = gender, y = mean_correct, fill = condition)) +
geom_col(width = 0.5)+
geom_errorbar(data = graph_data, aes(ymin = mean_correct - mean_sem, ymax = mean_correct+ mean_sem), width = 0.5)+
geom_text(aes(label=graph_data$mean_correct),vjust=-1.2)
ggplot(data = graph_data, aes(x = gender, y = mean_correct, fill = condition)) +
geom_col(position = "dodge", width = 0.5) +
geom_errorbar(data = graph_data, aes(ymin = mean_correct - mean_sem, ymax = mean_correct+ mean_sem), width = 0.5)+
geom_text(aes(label=graph_data$mean_correct),vjust=-1.2)
ggplot(data = graph_data, aes(x = gender, y = mean_correct, fill = condition)) +
geom_col(position = "dodge", width = 0.5) +
geom_errorbar(data = graph_data, aes(ymin = mean_correct - mean_sem, ymax = mean_correct+ mean_sem),)+
geom_text(aes(label=graph_data$mean_correct),vjust=-1.2)
ggplot(data = graph_data, aes(x = gender, y = mean_correct, fill = condition)) +
geom_col(width = 0.5) +
geom_errorbar(
aes(ymin = mean_correct - mean_sem, ymax = mean_correct + mean_sem),
width = 0.2
) +
geom_text(aes(label = sprintf("%.2f", mean_correct)), vjust = -1.2)
ggplot(data = graph_data, aes(x = gender, y = mean_correct, fill = condition)) +
# Dodge the bars based on condition
geom_col(position = "dodge", width = 0.5) +
# Dodge the error bars as well
geom_errorbar(
aes(ymin = mean_correct - mean_sem, ymax = mean_correct + mean_sem),
width = 0.2, position = position_dodge(0.5)
) +
# Dodge the text labels, too
geom_text(aes(label = sprintf("%.2f", mean_correct)), vjust = -1.2, position = position_dodge(0.5))
summary(anova)
anova<- aov(correct_count ~ gender * condition, data = ready_data)
summary(anova)
### Data Preparation
#### Load Relevant Libraries and Functions
library(readr)
library(dplyr)
library(ggplot2)
library(ez)
library(osfr)
library(tidyr)
library(jsonlite)
library(stringr)
#### Import data
files <- list.files(path="~/Desktop/tarampi2016_rescue/pilot data/", full.names = TRUE)
# read in and combine all the CSV files using bind_rows()
combined_data <- lapply(files, function(filepath) {
df <- read.csv(filepath)
return(df)
})%>%
bind_rows()
#### Data exclusion / filtering
# exclude unwanted columns and rows
organized.data <- combined_data %>%
select("subject_id", "stimulus","response", "condition", "correct") %>%
filter (response != 0 ) %>%
filter (subject_id != "na")
#### Prepare data for analysis - create columns etc.
correct_counts <- organized.data %>%
mutate(gender = case_when(response == '{"sex":"Female"}' ~ "Female",
response == '{"sex":"Male"}' ~ "Male",
response == '{"sex":"Other"}' ~ "Other"))
ready_data <-correct_counts%>%
group_by(subject_id,) %>%
mutate(correct_count = sum(correct, na.rm=TRUE))%>%
filter(is.na(gender)==FALSE)
graph_data = ready_data %>%
group_by(condition, gender) %>%
summarise(mean_correct = mean(correct_count), mean_sem = sd(correct_count) / sqrt(n()))
#descriptive statistics
ggplot(data = graph_data, aes(x = gender, y = mean_correct, fill = condition)) +
# Dodge the bars based on condition
geom_col(position = "dodge", width = 0.5) +
# Dodge the error bars as well
geom_errorbar(
aes(ymin = mean_correct - mean_sem, ymax = mean_correct + mean_sem),
width = 0.2, position = position_dodge(0.5)) +
# Dodge the text labels, too
geom_text(aes(label = sprintf("%.2f", mean_correct)), vjust = -1.2, position = position_dodge(0.5))
#ANOVA test
anova<- aov(correct_count ~ gender * condition, data = ready_data)
summary(anova)
